#!/usr/bin/env Rscript
##### LIBRARIES -------
library(Seurat)
library(tidyr)
library(Matrix)
library(scales)
library(cowplot)
library(RCurl)
library(stringr)
library(dplyr)
library(ggplot2)
#library(ggpubr)

###### SETTING UP INPUT COMMANDS ----
args = commandArgs(trailingOnly=TRUE)
outdatapath = paste(args[2], "/outdata/", sep = "")
dir.create(outdatapath, showWarnings = F, recursive = T)
plotpath = paste(args[2], "/plots/", sep = "")
dir.create(plotpath, showWarnings = F, recursive = T)

##### FUNCTIONS ----
load(args[1])
samples=as.list(read.table(args[3]))
sample_info=read.table(args[4], header = F, sep = ",")
colnames(sample_info) <- c("sample", "species", 'ref', "sex", "stage")

mutation_read <- function(sample){
  samp = gsub("_", "", sample) %>% toupper()
  mut_rate <- read.table(paste(sample, "_mutation_data.txt.gz", sep = ""), sep = " ", header = F) 
  colnames(mut_rate) <- c("Barcode", "pos", "refn", "altn", "CHROM", "ref", "alt")
  mut_rate$Barcode <- paste(samp, mut_rate$Barcode, sep = "_")
  metadata <- filter(seurat_marker@meta.data, sample == samp & is.na(sctype_labels) == F)
  mut_rate_sc <- mut_rate %>% merge(seurat_marker@meta.data[
    is.na(seurat_marker@meta.data$sctype_labels) == F,c('cells', 'sctype_labels')], 
    by.x = 'Barcode', by.y = "cells")
  mut_rate_sc$sample <- sample
  return(mut_rate_sc)
}


seurat_marker <- subset(seurat_marker, sample = sample_info$sample)

c=0
for (f in sample_info$sample){
  c=c+1
  print(f)
  if (c==1){
    merged_temp <- mutation_read(f)
  } else {
    temp <- mutation_read(f)
    merged_temp <- rbind(merged_temp, temp)
  }
}

print("done mutation_read")
merged_sc_mut <- merged_temp

somatic_snps <- filter(merged_sc_mut, sctype_labels != "germ") %>% 
  group_by(pos, CHROM, sample) %>% 
  reframe(refn = sum(refn), 
          altn = sum(altn), 
          depth = sum(c(altn, refn))) %>% 
  mutate(genotype = case_when(refn == 0 ~"alt", 
                              altn == 0 ~"ref", 
                              refn > 0 & altn > 0 ~ "het")) 
print("done somatic snps")
#write.csv(somatic_snps,  file=gzfile("/fastdata/bop20pp/Avian_scRNAseq/R_analyses/mut_id/somatic_snps.csv.gz"))

somatic_snps_filt <- somatic_snps %>% 
  filter(altn > 10 | refn > 10) %>% 
  filter(altn == depth | refn == depth) %>% 
  filter(genotype != 'het')
  
germ_snps <- filter(merged_sc_mut, sctype_labels == "germ") %>% 
  group_by(pos, CHROM, Barcode, sample, sctype_labels) %>% 
  reframe(refn = sum(refn), 
          altn = sum(altn), 
          depth = sum(c(altn, refn))) %>% 
  filter(pos %in% somatic_snps$pos) %>% 
  mutate(genotype = case_when(refn == 0 ~"alt", 
                              altn == 0 ~"ref",
                              (refn > 0 & altn > 0) ~"het"))
print("done germ snps")
#write.csv(germ_snps,  file=gzfile(
#  "/fastdata/bop20pp/Avian_scRNAseq/R_analyses/mut_id/germ_snps.csv.gz"))


germ_somatic <-  germ_snps %>% 
  merge(somatic_snps, by = c('pos', 'sample', 'CHROM'), suffixes = c( '.other','.somatic')) %>% 
  mutate(mutated = case_when(genotype.other != genotype.somatic ~ "mutation", 
                             genotype.other == genotype.somatic ~ "none"))

germ_somatic$mutated[germ_somatic$genotype.other == 'het' & 
                       germ_somatic$genotype.somatic != 'het'] <- "mutation"


print("doing gs file")
gs <- germ_somatic %>% 
 filter(genotype.other == 'het' | genotype.somatic != 'het') %>% 
  group_by(Barcode, sample, sctype_labels) %>% 
  reframe(nmuts = sum(which(mutated == 'mutation')),
          nnone = sum(which(mutated == "none")))
gs$mut_level <- gs$nmuts/(gs$nnone+gs$nmuts)


#write.table(gs, "//fastdata/bop20pp/Avian_scRNAseq/R_analyses/mut_id/gs.txt")

seurat_mutant <- seurat_marker
seurat_mutant@meta.data <- merge(seurat_mutant@meta.data, gs[,c(1,4,5,6)], by.x = "cells", by.y = "Barcode", all.x = TRUE)

save(seurat_mutant, file = paste(outdatapath, "/seurat_mutant.RData", sep = ""))

